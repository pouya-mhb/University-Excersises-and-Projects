function [Id,MSSubClass,MSZoning,LotFrontage,LotArea,Street,Alley,LotShape,LandContour,Utilities,LotConfig,LandSlope,Neighborhood,Condition1,Condition2,BldgType,HouseStyle,OverallQual,OverallCond,YearBuilt,YearRemodAdd,RoofStyle,RoofMatl,Exterior1st,Exterior2nd,MasVnrType,MasVnrArea,ExterQual,ExterCond,Foundation,BsmtQual,BsmtCond,BsmtExposure,BsmtFinType1,BsmtFinSF1,BsmtFinType2,BsmtFinSF2,BsmtUnfSF,TotalBsmtSF,Heating,HeatingQC,CentralAir,Electrical,stFlrSF,ndFlrSF,LowQualFinSF,GrLivArea,BsmtFullBath,BsmtHalfBath,FullBath,HalfBath,BedroomAbvGr,KitchenAbvGr,KitchenQual,TotRmsAbvGrd,Functional,Fireplaces,FireplaceQu,GarageType,GarageYrBlt,GarageFinish,GarageCars,GarageArea,GarageQual,GarageCond,PavedDrive,WoodDeckSF,OpenPorchSF,EnclosedPorch,SsnPorch,ScreenPorch,PoolArea,PoolQC,Fence,MiscFeature,MiscVal,MoSold,YrSold,SaleType,SaleCondition,SalePrice] = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [ID,MSSUBCLASS,MSZONING,LOTFRONTAGE,LOTAREA,STREET,ALLEY,LOTSHAPE,LANDCONTOUR,UTILITIES,LOTCONFIG,LANDSLOPE,NEIGHBORHOOD,CONDITION1,CONDITION2,BLDGTYPE,HOUSESTYLE,OVERALLQUAL,OVERALLCOND,YEARBUILT,YEARREMODADD,ROOFSTYLE,ROOFMATL,EXTERIOR1ST,EXTERIOR2ND,MASVNRTYPE,MASVNRAREA,EXTERQUAL,EXTERCOND,FOUNDATION,BSMTQUAL,BSMTCOND,BSMTEXPOSURE,BSMTFINTYPE1,BSMTFINSF1,BSMTFINTYPE2,BSMTFINSF2,BSMTUNFSF,TOTALBSMTSF,HEATING,HEATINGQC,CENTRALAIR,ELECTRICAL,STFLRSF,NDFLRSF,LOWQUALFINSF,GRLIVAREA,BSMTFULLBATH,BSMTHALFBATH,FULLBATH,HALFBATH,BEDROOMABVGR,KITCHENABVGR,KITCHENQUAL,TOTRMSABVGRD,FUNCTIONAL,FIREPLACES,FIREPLACEQU,GARAGETYPE,GARAGEYRBLT,GARAGEFINISH,GARAGECARS,GARAGEAREA,GARAGEQUAL,GARAGECOND,PAVEDDRIVE,WOODDECKSF,OPENPORCHSF,ENCLOSEDPORCH,SSNPORCH,SCREENPORCH,POOLAREA,POOLQC,FENCE,MISCFEATURE,MISCVAL,MOSOLD,YRSOLD,SALETYPE,SALECONDITION,SALEPRICE]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [ID,MSSUBCLASS,MSZONING,LOTFRONTAGE,LOTAREA,STREET,ALLEY,LOTSHAPE,LANDCONTOUR,UTILITIES,LOTCONFIG,LANDSLOPE,NEIGHBORHOOD,CONDITION1,CONDITION2,BLDGTYPE,HOUSESTYLE,OVERALLQUAL,OVERALLCOND,YEARBUILT,YEARREMODADD,ROOFSTYLE,ROOFMATL,EXTERIOR1ST,EXTERIOR2ND,MASVNRTYPE,MASVNRAREA,EXTERQUAL,EXTERCOND,FOUNDATION,BSMTQUAL,BSMTCOND,BSMTEXPOSURE,BSMTFINTYPE1,BSMTFINSF1,BSMTFINTYPE2,BSMTFINSF2,BSMTUNFSF,TOTALBSMTSF,HEATING,HEATINGQC,CENTRALAIR,ELECTRICAL,STFLRSF,NDFLRSF,LOWQUALFINSF,GRLIVAREA,BSMTFULLBATH,BSMTHALFBATH,FULLBATH,HALFBATH,BEDROOMABVGR,KITCHENABVGR,KITCHENQUAL,TOTRMSABVGRD,FUNCTIONAL,FIREPLACES,FIREPLACEQU,GARAGETYPE,GARAGEYRBLT,GARAGEFINISH,GARAGECARS,GARAGEAREA,GARAGEQUAL,GARAGECOND,PAVEDDRIVE,WOODDECKSF,OPENPORCHSF,ENCLOSEDPORCH,SSNPORCH,SCREENPORCH,POOLAREA,POOLQC,FENCE,MISCFEATURE,MISCVAL,MOSOLD,YRSOLD,SALETYPE,SALECONDITION,SALEPRICE]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Id,MSSubClass,MSZoning,LotFrontage,LotArea,Street,Alley,LotShape,LandContour,Utilities,LotConfig,LandSlope,Neighborhood,Condition1,Condition2,BldgType,HouseStyle,OverallQual,OverallCond,YearBuilt,YearRemodAdd,RoofStyle,RoofMatl,Exterior1st,Exterior2nd,MasVnrType,MasVnrArea,ExterQual,ExterCond,Foundation,BsmtQual,BsmtCond,BsmtExposure,BsmtFinType1,BsmtFinSF1,BsmtFinType2,BsmtFinSF2,BsmtUnfSF,TotalBsmtSF,Heating,HeatingQC,CentralAir,Electrical,stFlrSF,ndFlrSF,LowQualFinSF,GrLivArea,BsmtFullBath,BsmtHalfBath,FullBath,HalfBath,BedroomAbvGr,KitchenAbvGr,KitchenQual,TotRmsAbvGrd,Functional,Fireplaces,FireplaceQu,GarageType,GarageYrBlt,GarageFinish,GarageCars,GarageArea,GarageQual,GarageCond,PavedDrive,WoodDeckSF,OpenPorchSF,EnclosedPorch,SsnPorch,ScreenPorch,PoolArea,PoolQC,Fence,MiscFeature,MiscVal,MoSold,YrSold,SaleType,SaleCondition,SalePrice] = importfile('train.csv',2, 1461);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2020/12/24 20:02:35

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
%fileID = fopen(train.csv,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,4,5,16,17,18,19,20,21,27,35,37,38,39,44,45,46,47,48,49,50,51,52,53,55,57,60,62,63,67,68,69,70,71,72,76,77,78,81]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(thousandsRegExp, ',', 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Split data into numeric and cell columns.
rawNumericColumns = raw(:, [1,2,4,5,16,17,18,19,20,21,27,35,37,38,39,44,45,46,47,48,49,50,51,52,53,55,57,60,62,63,67,68,69,70,71,72,76,77,78,81]);
rawCellColumns = raw(:, [3,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,28,29,30,31,32,33,34,36,40,41,42,43,54,56,58,59,61,64,65,66,73,74,75,79,80]);


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
Id = cell2mat(rawNumericColumns(:, 1));
MSSubClass = cell2mat(rawNumericColumns(:, 2));
MSZoning = rawCellColumns(:, 1);
LotFrontage = cell2mat(rawNumericColumns(:, 3));
LotArea = cell2mat(rawNumericColumns(:, 4));
Street = rawCellColumns(:, 2);
Alley = rawCellColumns(:, 3);
LotShape = rawCellColumns(:, 4);
LandContour = rawCellColumns(:, 5);
Utilities = rawCellColumns(:, 6);
LotConfig = rawCellColumns(:, 7);
LandSlope = rawCellColumns(:, 8);
Neighborhood = rawCellColumns(:, 9);
Condition1 = rawCellColumns(:, 10);
Condition2 = rawCellColumns(:, 11);
BldgType = cell2mat(rawNumericColumns(:, 5));
HouseStyle = cell2mat(rawNumericColumns(:, 6));
OverallQual = cell2mat(rawNumericColumns(:, 7));
OverallCond = cell2mat(rawNumericColumns(:, 8));
YearBuilt = cell2mat(rawNumericColumns(:, 9));
YearRemodAdd = cell2mat(rawNumericColumns(:, 10));
RoofStyle = rawCellColumns(:, 12);
RoofMatl = rawCellColumns(:, 13);
Exterior1st = rawCellColumns(:, 14);
Exterior2nd = rawCellColumns(:, 15);
MasVnrType = rawCellColumns(:, 16);
MasVnrArea = cell2mat(rawNumericColumns(:, 11));
ExterQual = rawCellColumns(:, 17);
ExterCond = rawCellColumns(:, 18);
Foundation = rawCellColumns(:, 19);
BsmtQual = rawCellColumns(:, 20);
BsmtCond = rawCellColumns(:, 21);
BsmtExposure = rawCellColumns(:, 22);
BsmtFinType1 = rawCellColumns(:, 23);
BsmtFinSF1 = cell2mat(rawNumericColumns(:, 12));
BsmtFinType2 = rawCellColumns(:, 24);
BsmtFinSF2 = cell2mat(rawNumericColumns(:, 13));
BsmtUnfSF = cell2mat(rawNumericColumns(:, 14));
TotalBsmtSF = cell2mat(rawNumericColumns(:, 15));
Heating = rawCellColumns(:, 25);
HeatingQC = rawCellColumns(:, 26);
CentralAir = rawCellColumns(:, 27);
Electrical = rawCellColumns(:, 28);
stFlrSF = cell2mat(rawNumericColumns(:, 16));
ndFlrSF = cell2mat(rawNumericColumns(:, 17));
LowQualFinSF = cell2mat(rawNumericColumns(:, 18));
GrLivArea = cell2mat(rawNumericColumns(:, 19));
BsmtFullBath = cell2mat(rawNumericColumns(:, 20));
BsmtHalfBath = cell2mat(rawNumericColumns(:, 21));
FullBath = cell2mat(rawNumericColumns(:, 22));
HalfBath = cell2mat(rawNumericColumns(:, 23));
BedroomAbvGr = cell2mat(rawNumericColumns(:, 24));
KitchenAbvGr = cell2mat(rawNumericColumns(:, 25));
KitchenQual = rawCellColumns(:, 29);
TotRmsAbvGrd = cell2mat(rawNumericColumns(:, 26));
Functional = rawCellColumns(:, 30);
Fireplaces = cell2mat(rawNumericColumns(:, 27));
FireplaceQu = rawCellColumns(:, 31);
GarageType = rawCellColumns(:, 32);
GarageYrBlt = cell2mat(rawNumericColumns(:, 28));
GarageFinish = rawCellColumns(:, 33);
GarageCars = cell2mat(rawNumericColumns(:, 29));
GarageArea = cell2mat(rawNumericColumns(:, 30));
GarageQual = rawCellColumns(:, 34);
GarageCond = rawCellColumns(:, 35);
PavedDrive = rawCellColumns(:, 36);
WoodDeckSF = cell2mat(rawNumericColumns(:, 31));
OpenPorchSF = cell2mat(rawNumericColumns(:, 32));
EnclosedPorch = cell2mat(rawNumericColumns(:, 33));
SsnPorch = cell2mat(rawNumericColumns(:, 34));
ScreenPorch = cell2mat(rawNumericColumns(:, 35));
PoolArea = cell2mat(rawNumericColumns(:, 36));
PoolQC = rawCellColumns(:, 37);
Fence = rawCellColumns(:, 38);
MiscFeature = rawCellColumns(:, 39);
MiscVal = cell2mat(rawNumericColumns(:, 37));
MoSold = cell2mat(rawNumericColumns(:, 38));
YrSold = cell2mat(rawNumericColumns(:, 39));
SaleType = rawCellColumns(:, 40);
SaleCondition = rawCellColumns(:, 41);
SalePrice = cell2mat(rawNumericColumns(:, 40));


